{"version":3,"sources":["webpack://SlVueTree/webpack/universalModuleDefinition","webpack://SlVueTree/webpack/bootstrap","webpack://SlVueTree/./src/sl-vue-tree.js","webpack://SlVueTree/./src/sl-vue-tree.vue?75ef","webpack://SlVueTree/./src/sl-vue-tree.vue","webpack://SlVueTree/./node_modules/vue-loader/lib/runtime/component-normalizer.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","sl_vue_tree","props","type","Array","default","edgeSize","Number","showBranches","Boolean","level","parentInd","allowMultiselect","scrollAreaHeight","maxScrollSpeed","data","rootCursorPosition","scrollIntervalId","scrollSpeed","lastSelectedNode","mouseIsDown","isDragging","lastMousePos","x","y","[object Object]","this","isRoot","document","addEventListener","onDocumentMouseupHandler","removeEventListener","computed","getParent","cursorPosition","nodeModels","copy","getNodes","nodes","children","gaps","push","getSelected","length","methods","pos","setCursorPosition","parentPath","map","nodeModel","ind","nodePath","concat","getNode","path","siblings","slice","getNodeSiblings","title","isLeaf","isExpanded","isSelected","pathStr","JSON","stringify","isFirstChild","isLastChild","newValue","getRoot","$emit","selectedNodes","event","targetNode","position","toggledNode","node","clickedNode","addToSelection","ctrlKey","newNodes","shiftSelectionMode","shiftKey","shiftSelectionStarted","traverse","emitInput","emitSelect","onNodeMousemoveHandler","initialDraggingState","clientX","clientY","isDragStarted","$root","$el","rootRect","getBoundingClientRect","$dragInfo","$refs","dragInfo","dragInfoTop","top","scrollTop","style","marginBottom","dragInfoLeft","left","$target","elementFromPoint","$nodeItem","getAttribute","closest","destNode","parse","select","nodeHeight","offsetHeight","offsetY","placement","scrollBottomLine","bottom","scrollDownSpeed","scrollTopLine","scrollTopSpeed","startScroll","stopScroll","getLastNode","getFirstNode","lastNode","onNodeMousedownHandler","speed","setInterval","clearInterval","onNodeMouseupHandler","stopDrag","draggingNodes","draggingNode","checkNodeIsParent","nodeModelsToInsert","draggingNodeModel","destSiblings","destNodeModel","unshift","insertInd","splice","emitDrop","updateNode","emitToggle","stopPropagation","$parent","nodeToUpdate","patch","assign","cb","shouldStop","forEach","nodeInd","itemPath","sourceNode","destPath","entity","render","_vm","_h","$createElement","_c","_self","staticClass","class","sl-vue-tree-root","on","mousemove","mouseleave","onMouseleaveHandler","ref","_l","sl-vue-tree-selected","visibility","dragover","preventDefault","_v","sl-vue-tree-cursor-inside","sl-vue-tree-node-is-leaf","sl-vue-tree-node-is-folder","attrs","drop","onNodeDropHandler","mousedown","mouseup","contextmenu","emitNodeContextmenu","dblclick","emitNodeDblclick","gapInd","_t","_e","_s","String","fromCharCode","click","onToggleHandler","scopedSlots","_u","key","fn","directives","rawName","expression","selectionSize","_withStripped","Component","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","normalizeComponent","__file","__webpack_exports__"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,UAAAD,IAEAD,EAAA,UAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA2CA,OAtCAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACAkB,OAAAC,eAAAnB,EAAA,cAAiDwB,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAxB,GACA,IAAAe,EAAAf,KAAAyB,WACA,WAA2B,OAAAzB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,yCClEA,IAAAC,GACAlB,KAAA,cACAmB,OACAV,OACAW,KAAAC,MACAC,QAAA,QAEAC,UACAH,KAAAI,OACAF,QAAA,GAEAG,cACAL,KAAAM,QACAJ,SAAA,GAEAK,OACAP,KAAAI,OACAF,QAAA,GAEAM,WACAR,KAAAI,QAEAK,kBACAT,KAAAM,QACAJ,SAAA,GAEAQ,kBACAV,KAAAI,OACAF,QAAA,IAEAS,gBACAX,KAAAI,OACAF,QAAA,KAIAU,KAAA,MAEAC,mBAAA,KACAC,iBAAA,EACAC,YAAA,EACAC,iBAAA,KACAC,aAAA,EACAC,YAAA,EACAC,cAAqBC,EAAA,EAAAC,EAAA,KAIrBC,UACAC,KAAAC,QACAC,SAAAC,iBAAA,UAAAH,KAAAI,2BAIAL,gBACAG,SAAAG,oBAAA,UAAAL,KAAAI,2BAGAE,UACAP,iBACA,OAAAC,KAAAC,OAAAD,KAAAV,mBACAU,KAAAO,YAAAC,gBAGAT,QACA,GAAAC,KAAAC,OAAA,CACA,MAAAQ,EAAAT,KAAAU,KAAAV,KAAAlC,OACA,OAAAkC,KAAAW,SAAAF,GAGA,OAAAT,KAAAO,YAAAK,MAAAZ,KAAAf,WAAA4B,UAMAd,OACA,MAAAe,KACA,IAAAhE,EAAAkD,KAAAhB,MAAA,EAEA,IADAgB,KAAAlB,cAAAhC,IACAA,KAAA,GAAAgE,EAAAC,KAAAjE,GACA,OAAAgE,GAGAf,SACA,OAAAC,KAAAhB,OAGAe,gBACA,OAAAC,KAAAgB,cAAAC,SAGAC,SAEAnB,kBAAAoB,GACAnB,KAAAC,OACAD,KAAAV,mBAAA6B,EAGAnB,KAAAO,YAAAa,kBAAAD,IAGApB,SAAAU,EAAAY,MAEA,OAAAZ,EAAAa,IAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAJ,EAAAK,OAAAF,GACA,OAAAxB,KAAA2B,QAAAF,EAAAF,EAAAd,MAIAV,QACA6B,EACAL,EAAA,KACAM,EAAA,MAEA,MAAAL,EAAAI,EAAAE,OAAA,MAqBA,OApBAD,KAAA7B,KAAA+B,gBAAA/B,KAAAlC,MAAA8D,IAMAI,OALAT,KAAAM,EAAAL,IAKAQ,MACAC,SAAAV,EAAAU,OACApB,SAAAU,EAAAV,SAAAb,KAAAW,SAAAY,EAAAV,SAAAe,MACAM,gBAAA,GAAAX,EAAAW,cAAAX,EAAAW,WACAC,aAAAZ,EAAAY,WACA9C,UAAA,IAAAkC,EAAAlC,KAAAkC,EAAAlC,QAGAuC,OACAQ,QAAAC,KAAAC,UAAAV,GACAJ,MACAe,aAAA,GAAAf,EACAgB,YAAAhB,IAAAK,EAAAZ,OAAA,IAKAlB,UAAA0C,GACAzC,KAAA0C,UAAAC,MAAA,QAAAF,IAGA1C,WAAA6C,EAAAC,GACA7C,KAAA0C,UAAAC,MAAA,SAAAC,EAAAC,IAGA9C,SAAA+C,EAAAC,EAAAF,GACA7C,KAAA0C,UAAAC,MAAA,OAAAG,EAAAC,EAAAF,IAGA9C,WAAAiD,EAAAH,GACA7C,KAAA0C,UAAAC,MAAA,SAAAK,EAAAH,IAGA9C,iBAAAkD,EAAAJ,GACA7C,KAAA0C,UAAAC,MAAA,eAAAM,EAAAJ,IAGA9C,oBAAAkD,EAAAJ,GACA7C,KAAA0C,UAAAC,MAAA,kBAAAM,EAAAJ,IAIA9C,OAAAmD,EAAAL,EAAA,KAAAM,GAAA,GACAA,GAAAN,KAAAO,SAAAD,IAAAnD,KAAAd,iBACA,MAAAmE,EAAArD,KAAAU,KAAAV,KAAAlC,OACAwF,EAAAtD,KAAAd,kBAAA2D,EAAAU,UAAAvD,KAAAP,iBACAmD,KACA,IAAAY,GAAA,EAEAxD,KAAAyD,SAAA,CAAAR,EAAA1B,KAEA+B,GACAL,EAAAb,UAAAc,EAAAd,SAAAa,EAAAb,UAAApC,KAAAP,iBAAA2C,UACAb,EAAAY,YAAA,EACAqB,MAEAA,IAAAjC,EAAAY,YAAA,IACSc,EAAAb,UAAAc,EAAAd,QACTb,EAAAY,YAAA,EACSgB,GACT5B,EAAAY,aAAAZ,EAAAY,YAAA,GAGAZ,EAAAY,YAAAS,EAAA7B,KAAAkC,IAEOI,GAGPrD,KAAAP,iBAAAyD,EACAlD,KAAA0D,UAAAL,GACArD,KAAA2D,WAAAf,EAAAC,IAGA9C,uBAAA8C,GACA,IAAA7C,KAAAC,OAEA,YADAD,KAAA0C,UAAAkB,uBAAAf,GAIA,MAAAgB,EAAA7D,KAAAL,WACAK,KAAAL,WACAK,KAAAL,YACAK,KAAAN,cACAM,KAAAJ,aAAAC,IAAAgD,EAAAiB,SAAA9D,KAAAJ,aAAAE,IAAA+C,EAAAkB,SAGA,MAAAC,GAAA,IAAAH,IAAA,IAAA7D,KAAAL,WAUA,GANAK,KAAAJ,cACAC,EAAAgD,EAAAiB,QACAhE,EAAA+C,EAAAkB,UAIA/D,KAAAL,WAAA,OAEA,MAAAsE,EAAAjE,KAAA0C,UAAAwB,IACAC,EAAAF,EAAAG,wBACAC,EAAArE,KAAAsE,MAAAC,SACAC,EAAA3B,EAAAkB,QAAAI,EAAAM,IAAAR,EAAAS,WAAA,EAAAL,EAAAM,MAAAC,cACAC,EAAAhC,EAAAiB,QAAAK,EAAAW,KAEAT,EAAAM,MAAAF,IAAAD,EAAA,KACAH,EAAAM,MAAAG,KAAAD,EAAA,KAIA,MAAAE,EAAA7E,SAAA8E,iBAAAnC,EAAAiB,QAAAjB,EAAAkB,SACAkB,EAAAF,EAAAG,aAAA,QAAAH,IAAAI,QAAA,UAEA,IAAAF,EAAA,OAEA,MAAAG,EAAApF,KAAA2B,QAAAU,KAAAgD,MAAAJ,EAAAC,aAAA,UAEAlB,IAAAoB,EAAAjD,YACAnC,KAAAsF,OAAAF,EAAAvC,GAIA,MAAA0C,EAAAN,EAAAO,aACA5G,EAAAoB,KAAApB,SACA6G,EAAA5C,EAAA4C,QACA,IAAAC,EAIAA,EADAN,EAAAnD,OACAwD,GAAAF,EAAA,mBAEAE,GAAA7G,EACA,SACS6G,GAAAF,EAAA3G,EACT,QAEA,SAIAoB,KAAAoB,mBAA8B6B,KAAAmC,EAAAM,cAE9B,MAAAC,EAAAxB,EAAAyB,OAAA5F,KAAAb,iBACA0G,GAAAhD,EAAAkB,QAAA4B,IAAAxB,EAAAyB,OAAAD,GACAG,EAAA3B,EAAAM,IAAAzE,KAAAb,iBACA4G,GAAAD,EAAAjD,EAAAkB,UAAA+B,EAAA3B,EAAAM,KAEAoB,EAAA,EACA7F,KAAAgG,YAAAH,GACOE,EAAA,EACP/F,KAAAgG,aAAAD,GAEA/F,KAAAiG,cAIAlG,oBAAA8C,GACA,IAAA7C,KAAAC,SAAAD,KAAAL,WAAA,OACA,MACAwE,EADAnE,KAAA0C,UAAAwB,IACAE,wBACAvB,EAAAkB,SAAAI,EAAAyB,OACA5F,KAAAoB,mBAAgC6B,KAAAjD,KAAAkG,cAAAR,UAAA,UACzB7C,EAAAkB,QAAAI,EAAAM,KACPzE,KAAAoB,mBAAgC6B,KAAAjD,KAAAmG,eAAAT,UAAA,YAIhC3F,cACA,IAAAqG,EAAA,KAIA,OAHApG,KAAAyD,SAAAR,IACAmD,EAAAnD,IAEAmD,GAGArG,eACA,OAAAC,KAAA2B,SAAA,KAGA5B,uBAAA8C,EAAAI,GACAjD,KAAAC,OAIAD,KAAAN,aAAA,EAHAM,KAAA0C,UAAA2D,uBAAAxD,EAAAI,IAOAlD,YAAAuG,GACA,MAAArC,EAAAjE,KAAA0C,UAAAwB,IACAlE,KAAAR,cAAA8G,IAEOtG,KAAAT,kBACPS,KAAAiG,aAGAjG,KAAAR,YAAA8G,EACAtG,KAAAT,iBAAAgH,YAAA,KACAtC,EAAAS,WAAA1E,KAAAZ,eAAAkH,GACO,MAGPvG,aACAyG,cAAAxG,KAAAT,kBACAS,KAAAT,iBAAA,EACAS,KAAAR,YAAA,GAGAO,yBAAA8C,GACA7C,KAAAL,YAAAK,KAAAyG,qBAAA5D,IAGA9C,qBAAA8C,EAAAC,EAAA,MAEA,IAAA9C,KAAAC,OAEA,YADAD,KAAA0C,UAAA+D,qBAAA5D,EAAAC,GAMA,GAFA9C,KAAAN,aAAA,GAEAM,KAAAL,YAAAmD,EAEA,YADA9C,KAAAsF,OAAAxC,EAAAD,GAIA,IAAA7C,KAAAQ,eAEA,YADAR,KAAA0G,WAKA,MAAAC,EAAA3G,KAAAgB,cAGA,QAAA4F,KAAAD,EAAA,CACA,GAAAC,EAAAxE,SAAApC,KAAAQ,eAAAyC,KAAAb,QAEA,YADApC,KAAA0G,WAIA,GAAA1G,KAAA6G,kBAAAD,EAAA5G,KAAAQ,eAAAyC,MAEA,YADAjD,KAAA0G,WAKA,MAAArD,EAAArD,KAAAU,KAAAV,KAAAlC,OACAgJ,KAGA,QAAAF,KAAAD,EAAA,CACA,MACAI,EADA/G,KAAA+B,gBAAAsB,EAAAuD,EAAAhF,MACAgF,EAAApF,KACAsF,EAAA/F,KAAAf,KAAAU,KAAAqG,IACAA,EAAA,iBAKA,MAAA3B,EAAApF,KAAAQ,eAAAyC,KACA+D,EAAAhH,KAAA+B,gBAAAsB,EAAA+B,EAAAxD,MACAqF,EAAAD,EAAA5B,EAAA5D,KAEA,cAAAxB,KAAAQ,eAAAkF,UACAuB,EAAApG,SAAAoG,EAAApG,aACAoG,EAAApG,SAAAqG,WAAAJ,OACO,CACP,MAAAK,EAAA,WAAAnH,KAAAQ,eAAAkF,UACAN,EAAA5D,IACA4D,EAAA5D,IAAA,EAEAwF,EAAAI,OAAAD,EAAA,KAAAL,GAMA9G,KAAAyD,SAAA,CAAAR,EAAA1B,EAAAM,KACA,IAAA/E,EAAA+E,EAAAZ,OACA,KAAAnE,KACA+E,EAAA/E,GAAA,eAAA+E,EAAAuF,OAAAtK,EAAA,IAEOuG,GAGPrD,KAAAP,iBAAA,KACAO,KAAA0D,UAAAL,GACArD,KAAAqH,SAAAV,EAAA3G,KAAAQ,eAAAqC,GACA7C,KAAA0G,YAIA3G,gBAAA8C,EAAAI,GACAjD,KAAAsH,WAAArE,GAA6Bf,YAAAe,EAAAf,aAC7BlC,KAAAuH,WAAAtE,EAAAJ,GACAA,EAAA2E,mBAGAzH,WACAC,KAAAL,YAAA,EACAK,KAAAN,aAAA,EACAM,KAAAoB,kBAAA,MACApB,KAAAiG,cAIAlG,YACA,OAAAC,KAAAyH,SAGA1H,UACA,OAAAC,KAAAC,OAAAD,KACAA,KAAAO,YAAAmC,WAGA3C,gBAAAa,EAAAgB,GACA,WAAAA,EAAAX,OAAAL,EACAZ,KAAA+B,gBAAAnB,EAAAgB,EAAA,IAAAf,SAAAe,EAAAE,MAAA,KAIA/B,WAAA2H,EAAAC,GACA,IAAA3H,KAAAC,OAEA,YADAD,KAAAO,YAAA+G,WAAAI,EAAAC,GAIA,MAAAtE,EAAArD,KAAAU,KAAAV,KAAAlC,OACAkC,KAAAyD,SAAA,CAAAR,EAAA1B,KACA0B,EAAAb,UAAAsF,EAAAtF,SACA5E,OAAAoK,OAAArG,EAAAoG,IACOtE,GAEPrD,KAAA0D,UAAAL,IAGAtD,cACA,MAAA6C,KAIA,OAHA5C,KAAAyD,SAAAR,IACAA,EAAAd,YAAAS,EAAA7B,KAAAkC,KAEAL,GAIA7C,SACA8H,EACApH,EAAA,KACAY,MAEAZ,MAAAT,KAAAlC,OAEA,IAAAgK,GAAA,EAEA,MAAAlH,KAeA,OAbAH,EAAAsH,QAAA,CAAAxG,EAAAyG,KACA,MAAAC,EAAA5G,EAAAK,OAAAsG,GACA/E,EAAAjD,KAAA2B,QAAAsG,EAAA1G,EAAAd,GAIA,GAHAqH,GAAA,IAAAD,EAAA5E,EAAA1B,EAAAd,GACAG,EAAAG,KAAAkC,GAEA6E,EAAA,SAEAvG,EAAAV,WACAiH,GAAA,IAAA9H,KAAAyD,SAAAoE,EAAAtG,EAAAV,SAAAoH,OAIAH,GAAAlH,GAGAb,kBAAAmI,EAAA9C,GACA,MAAA+C,EAAA/C,EAAAxD,KACA,OAAAS,KAAAC,UAAA6F,EAAArG,MAAA,EAAAoG,EAAAtG,KAAAX,UAAAiH,EAAA9F,SAGA1B,KAAA0H,GACA/F,KAAAgD,MAAAhD,KAAAC,UAAA8F,MCrfAC,EAAA,WACA,IAAAC,EAAAtI,KACAuI,EAAAD,EAAAE,eACAC,EAAAH,EAAAI,MAAAD,IAAAF,EACA,OAAAE,EACA,OAEAE,YAAA,cACAC,OAAcC,mBAAAP,EAAArI,QACd6I,IACAC,UAAA,SAAAlG,GACA,OAAAyF,EAAA1E,uBAAAf,IAEAmG,WAAA,SAAAnG,GACA,OAAAyF,EAAAW,oBAAApG,OAKA4F,EACA,OACSS,IAAA,QAAAP,YAAA,2BAETL,EAAAa,GAAAb,EAAA1H,MAAA,SAAAqC,EAAA+E,GACA,OAAAS,EACA,OAEAE,YAAA,mBACAC,OAAwBQ,uBAAAnG,EAAAd,cAGxBsG,EAAA,OACAE,YAAA,+CACAhE,OACA0E,WACAf,EAAA9H,gBACA8H,EAAA9H,eAAAyC,KAAAb,UAAAa,EAAAb,SACA,WAAAkG,EAAA9H,eAAAkF,UACA,UACA,UAEAoD,IACAQ,SAAA,SAAAzG,GACA,OAAAA,EAAA0G,qBAIAjB,EAAAkB,GAAA,KACAf,EACA,OAEAE,YAAA,wBACAC,OACAa,4BACAnB,EAAA9H,gBACA,WAAA8H,EAAA9H,eAAAkF,WACA4C,EAAA9H,eAAAyC,KAAAb,UAAAa,EAAAb,QACAsH,2BAAAzG,EAAAhB,OACA0H,8BAAA1G,EAAAhB,QAEA2H,OAA4BhI,KAAAqB,EAAAb,SAC5B0G,IACAe,KAAA,SAAAhH,GACA,OAAAyF,EAAAwB,kBAAAjH,EAAAI,IAEA8G,UAAA,SAAAlH,GACA,OAAAyF,EAAAjC,uBAAAxD,EAAAI,IAEA+G,QAAA,SAAAnH,GACA,OAAAyF,EAAA7B,qBAAA5D,EAAAI,IAEAgH,YAAA,SAAApH,GACA,OAAAyF,EAAA4B,oBAAAjH,EAAAJ,IAEAsH,SAAA,SAAAtH,GACA,OAAAyF,EAAA8B,iBAAAnH,EAAAJ,OAKAyF,EAAAa,GAAAb,EAAAxH,KAAA,SAAAuJ,GACA,OAAA5B,EAAA,OAAwCE,YAAA,sBAExCL,EAAAkB,GAAA,KACAlB,EAAAtJ,OAAAsJ,EAAAxJ,aACA2J,EACA,OAC2BE,YAAA,uBAE3BL,EAAAgC,GACA,UAEArH,EAAAT,YASA8F,EAAAiC,KARA9B,EAAA,QACAH,EAAAkB,GACA,iBACAlB,EAAAkC,GAAAC,OAAAC,aAAA,OACApC,EAAAkC,GAAAC,OAAAC,aAAA,OACA,mBAIApC,EAAAkB,GAAA,KACAvG,EAAAT,YACAiG,EAAA,QACAH,EAAAkB,GACA,iBACAlB,EAAAkC,GAAAC,OAAAC,aAAA,OACApC,EAAAkC,GAAAC,OAAAC,aAAA,OACA,mBAGApC,EAAAiC,OAE+BtH,UAG/B,GAEAqF,EAAAiC,KACAjC,EAAAkB,GAAA,KACAf,EACA,OACuBE,YAAA,sBAEvB1F,EAAAhB,OAkCAqG,EAAAiC,KAjCA9B,EACA,QAEAE,YAAA,qBACAG,IACA6B,MAAA,SAAA9H,GACA,OAAAyF,EAAAsC,gBAAA/H,EAAAI,OAKAqF,EAAAgC,GACA,UAEA7B,EAAA,QACAH,EAAAkB,GACA,kBACAlB,EAAAkC,GACAvH,EAAAhB,OAIA,GAHAgB,EAAAf,WACA,IACA,KAGA,sBAImCe,UAGnC,GAGAqF,EAAAkB,GAAA,KACAlB,EAAAgC,GAAA,SAAAhC,EAAAkB,GAAAlB,EAAAkC,GAAAvH,EAAAjB,UACAiB,UAGA,GAEAqF,EAAAkB,GAAA,KACAf,EACA,OACuBE,YAAA,wBACvBL,EAAAgC,GAAA,gBAAgDrH,UAChD,IAGA,GAEAqF,EAAAkB,GAAA,KACAf,EAAA,OACAE,YAAA,8CACAhE,OACA0E,WACAf,EAAA9H,gBACA8H,EAAA9H,eAAAyC,KAAAb,UAAAa,EAAAb,SACA,UAAAkG,EAAA9H,eAAAkF,UACA,UACA,UAEAoD,IACAQ,SAAA,SAAAzG,GACA,OAAAA,EAAA0G,qBAIAjB,EAAAkB,GAAA,KACAvG,EAAApC,UAAAoC,EAAApC,SAAAI,QAAAgC,EAAAf,WACAuG,EAAA,eACAmB,OACA9L,MAAAmF,EAAApC,SACA7B,MAAAsJ,EAAAtJ,MAAA,EACAC,UAAA+I,EACA9I,iBAAAoJ,EAAApJ,iBACAN,SAAA0J,EAAA1J,SACAE,aAAAwJ,EAAAxJ,cAEAgK,IACAQ,SAAA,SAAAzG,GACA,OAAAA,EAAA0G,mBAGAsB,YAAAvC,EAAAwC,KAEAC,IAAA,QACAC,GAAA,SAAA9B,GACA,IAAAjG,EAAAiG,EAAAjG,KACA,OACAqF,EAAAgC,GAAA,SAAAhC,EAAAkB,GAAAlB,EAAAkC,GAAAvH,EAAAjB,UACAiB,aAMA8H,IAAA,SACAC,GAAA,SAAA9B,GACA,IAAAjG,EAAAiG,EAAAjG,KACA,OACAqF,EAAAgC,GACA,UAEA7B,EAAA,QACAH,EAAAkB,GACA,kBACAlB,EAAAkC,GACAvH,EAAAhB,OAIA,GAHAgB,EAAAf,WACA,IACA,KAGA,oBAIiCe,aAMjC8H,IAAA,UACAC,GAAA,SAAA9B,GACA,IAAAjG,EAAAiG,EAAAjG,KACA,OAAAqF,EAAAgC,GAAA,gBAA6DrH,gBAK7DqF,EAAAiC,MAEA,KAGAjC,EAAAkB,GAAA,KACAf,EACA,OAEAwC,aAEA5N,KAAA,OACA6N,QAAA,SACApN,MAAAwK,EAAA3I,WACAwL,WAAA,eAGAjC,IAAA,WACAP,YAAA,0BAGAL,EAAAgC,GAAA,YACAhC,EAAAkB,GACA,oBAAAlB,EAAAkC,GAAAlC,EAAA8C,eAAA,eAIA,IAGA,MAMA/C,EAAAgD,eAAA,ECtSA,IAcAC,ECRA,SACAC,EACAlD,EACAmD,EACAC,EACAC,EACAC,EACAC,EACAC,GAKA,IAAApN,SAHA8M,SAGA5M,QACA,WAAAF,GAAA,aAAAA,IACA8M,IAAA5M,SAIA,IAqBAmN,EArBAC,EAAA,mBAAAR,EACAA,EAAAQ,QACAR,EAiDA,GA9CAlD,IACA0D,EAAA1D,SACA0D,EAAAP,kBACAO,EAAAC,WAAA,GAIAP,IACAM,EAAAE,YAAA,GAIAN,IACAI,EAAAG,SAAAP,GAIAC,GACAE,EAAA,SAAAK,IAEAA,EACAA,GACAnM,KAAAoM,QAAApM,KAAAoM,OAAAC,YACArM,KAAAsM,QAAAtM,KAAAsM,OAAAF,QAAApM,KAAAsM,OAAAF,OAAAC,aAEA,oBAAAE,sBACAJ,EAAAI,qBAGAb,GACAA,EAAAzO,KAAA+C,KAAAmM,GAGAA,KAAAK,uBACAL,EAAAK,sBAAAC,IAAAb,IAKAG,EAAAW,aAAAZ,GACGJ,IACHI,EAAAD,EACA,WAAqBH,EAAAzO,KAAA+C,UAAAiE,MAAA0I,SAAAC,aACrBlB,GAGAI,EACA,GAAAC,EAAAE,WAAA,CAGAF,EAAAc,cAAAf,EAEA,IAAAgB,EAAAf,EAAA1D,OACA0D,EAAA1D,OAAA,SAAA0E,EAAAZ,GAEA,OADAL,EAAA7O,KAAAkP,GACAW,EAAAC,EAAAZ,QAEK,CAEL,IAAAa,EAAAjB,EAAAkB,aACAlB,EAAAkB,aAAAD,KACAtL,OAAAsL,EAAAlB,IACAA,GAIA,OACAxP,QAAAiP,EACAQ,WDpFAmB,CACA3O,EACA8J,MAVA,EAEA,KAEA,KAEA,MAWAiD,EAAAS,QAAAoB,OAAA,uBAkBAC,EAAA,QAAA9B,EAAA","file":"sl-vue-tree.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SlVueTree\"] = factory();\n\telse\n\t\troot[\"SlVueTree\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport default {\n  name: 'sl-vue-tree',\n  props: {\n    value: {\n      type: Array,\n      default: () => []\n    },\n    edgeSize: {\n      type: Number,\n      default: 3\n    },\n    showBranches: {\n      type: Boolean,\n      default: false\n    },\n    level: {\n      type: Number,\n      default: 0\n    },\n    parentInd: {\n      type: Number\n    },\n    allowMultiselect: {\n      type: Boolean,\n      default: true\n    },\n    scrollAreaHeight: {\n      type: Number,\n      default: 70\n    },\n    maxScrollSpeed: {\n      type: Number,\n      default: 20\n    }\n  },\n\n  data() {\n    return {\n      rootCursorPosition: null,\n      scrollIntervalId: 0,\n      scrollSpeed: 0,\n      lastSelectedNode: null,\n      mouseIsDown: false,\n      isDragging: false,\n      lastMousePos: {x: 0, y: 0}\n    };\n  },\n\n  mounted() {\n    if (this.isRoot) {\n      document.addEventListener('mouseup', this.onDocumentMouseupHandler);\n    }\n  },\n\n  beforeDestroy() {\n    document.removeEventListener('mouseup', this.onDocumentMouseupHandler);\n  },\n\n  computed: {\n    cursorPosition() {\n      if (this.isRoot) return this.rootCursorPosition;\n      return this.getParent().cursorPosition;\n    },\n\n    nodes() {\n      if (this.isRoot) {\n        const nodeModels = this.copy(this.value);\n        return this.getNodes(nodeModels);\n      }\n\n      return this.getParent().nodes[this.parentInd].children;\n    },\n    /**\n   * gaps is using for nodes indentation\n   * @returns {number[]}\n   */\n    gaps() {\n      const gaps = [];\n      let i = this.level - 1;\n      if (!this.showBranches) i++;\n      while (i-- > 0) gaps.push(i);\n      return gaps;\n    },\n\n    isRoot() {\n      return !this.level\n    },\n\n    selectionSize() {\n      return this.getSelected().length;\n    }\n  },\n  methods: {\n\n    setCursorPosition(pos) {\n      if (this.isRoot) {\n        this.rootCursorPosition = pos;\n        return;\n      }\n      this.getParent().setCursorPosition(pos);\n    },\n\n    getNodes(nodeModels, parentPath = []) {\n\n      return nodeModels.map((nodeModel, ind) => {\n        const nodePath = parentPath.concat(ind);\n        return this.getNode(nodePath, nodeModel, nodeModels);\n      })\n    },\n\n    getNode(\n      path,\n      nodeModel = null,\n      siblings = null\n    ) {\n      const ind = path.slice(-1)[0];\n      siblings = siblings || this.getNodeSiblings(this.value, path);\n      nodeModel = nodeModel || siblings[ind];\n\n      const node = {\n\n        // define the all ISlTreeNodeModel props\n        title: nodeModel.title,\n        isLeaf: !!nodeModel.isLeaf,\n        children: nodeModel.children ? this.getNodes(nodeModel.children, path) : [],\n        isExpanded: nodeModel.isExpanded == void 0 ? true : !!nodeModel.isExpanded,\n        isSelected: !!nodeModel.isSelected,\n        data: nodeModel.data !== void 0 ? nodeModel.data : {},\n\n        // define the all ISlTreeNode computed props\n        path: path,\n        pathStr: JSON.stringify(path),\n        ind,\n        isFirstChild: ind == 0,\n        isLastChild: ind === siblings.length - 1\n      };\n      return node;\n    },\n\n    emitInput(newValue) {\n      this.getRoot().$emit('input', newValue);\n    },\n\n    emitSelect(selectedNodes, event) {\n      this.getRoot().$emit('select', selectedNodes, event);\n    },\n\n    emitDrop(targetNode, position, event) {\n      this.getRoot().$emit('drop', targetNode, position, event);\n    },\n\n    emitToggle(toggledNode, event) {\n      this.getRoot().$emit('toggle', toggledNode, event);\n    },\n\n    emitNodeDblclick(node, event) {\n      this.getRoot().$emit('nodedblclick', node, event);\n    },\n\n    emitNodeContextmenu(node, event) {\n      this.getRoot().$emit('nodecontextmenu', node, event);\n    },\n\n\n    select(clickedNode, event = null, addToSelection = false) {\n      addToSelection = ((event && event.ctrlKey) || addToSelection) && this.allowMultiselect;\n      const newNodes = this.copy(this.value);\n      const shiftSelectionMode = this.allowMultiselect && event.shiftKey && this.lastSelectedNode;\n      const selectedNodes = [];\n      let shiftSelectionStarted = false;\n\n      this.traverse((node, nodeModel) => {\n\n        if (shiftSelectionMode) {\n          if (node.pathStr === clickedNode.pathStr || node.pathStr === this.lastSelectedNode.pathStr) {\n            nodeModel.isSelected = true;\n            shiftSelectionStarted = !shiftSelectionStarted;\n          }\n          if (shiftSelectionStarted) nodeModel.isSelected = true;\n        } else if (node.pathStr === clickedNode.pathStr) {\n          nodeModel.isSelected = true;\n        } else if (!addToSelection) {\n          if (nodeModel.isSelected) nodeModel.isSelected = false;\n        }\n\n        if (nodeModel.isSelected) selectedNodes.push(node);\n\n      }, newNodes);\n\n\n      this.lastSelectedNode = clickedNode;\n      this.emitInput(newNodes);\n      this.emitSelect(selectedNodes, event);\n    },\n\n    onNodeMousemoveHandler(event) {\n      if (!this.isRoot) {\n        this.getRoot().onNodeMousemoveHandler(event);\n        return;\n      }\n\n      const initialDraggingState = this.isDragging;\n      this.isDragging =\n        this.isDragging || (\n        this.mouseIsDown &&\n        (this.lastMousePos.x !== event.clientX || this.lastMousePos.y !== event.clientY)\n      );\n\n      const isDragStarted = initialDraggingState === false && this.isDragging === true;\n\n\n\n      this.lastMousePos = {\n        x: event.clientX,\n        y: event.clientY\n      };\n\n\n      if (!this.isDragging) return;\n\n      const $root = this.getRoot().$el;\n      const rootRect = $root.getBoundingClientRect();\n      const $dragInfo = this.$refs.dragInfo;\n      const dragInfoTop = (event.clientY - rootRect.top + $root.scrollTop - ($dragInfo.style.marginBottom | 0) );\n      const dragInfoLeft = (event.clientX - rootRect.left);\n\n      $dragInfo.style.top = dragInfoTop + 'px';\n      $dragInfo.style.left = dragInfoLeft + 'px';\n\n\n\n      const $target = document.elementFromPoint(event.clientX, event.clientY);\n      const $nodeItem = $target.getAttribute('path') ? $target : $target.closest('[path]');\n\n      if (!$nodeItem) return;\n\n      const destNode = this.getNode(JSON.parse($nodeItem.getAttribute('path')));\n\n      if (isDragStarted && !destNode.isSelected) {\n        this.select(destNode, event);\n      }\n\n\n      const nodeHeight = $nodeItem.offsetHeight;\n      const edgeSize = this.edgeSize;\n      const offsetY = event.offsetY;\n      let placement;\n\n\n      if (destNode.isLeaf) {\n        placement = offsetY >= nodeHeight / 2 ? 'after' : 'before';\n      } else {\n        if (offsetY <= edgeSize) {\n          placement = 'before';\n        } else if (offsetY >= nodeHeight - edgeSize) {\n          placement = 'after';\n        } else {\n          placement = 'inside';\n        }\n      }\n\n      this.setCursorPosition({ node: destNode, placement });\n\n      const scrollBottomLine = rootRect.bottom - this.scrollAreaHeight;\n      const scrollDownSpeed = (event.clientY - scrollBottomLine) / (rootRect.bottom - scrollBottomLine);\n      const scrollTopLine = rootRect.top + this.scrollAreaHeight;\n      const scrollTopSpeed = (scrollTopLine - event.clientY) / (scrollTopLine - rootRect.top);\n\n      if (scrollDownSpeed > 0) {\n        this.startScroll(scrollDownSpeed);\n      } else if (scrollTopSpeed > 0) {\n        this.startScroll(-scrollTopSpeed)\n      } else {\n        this.stopScroll();\n      }\n    },\n\n    onMouseleaveHandler(event) {\n      if (!this.isRoot || !this.isDragging) return;\n      const $root = this.getRoot().$el;\n      const rootRect = $root.getBoundingClientRect();\n      if (event.clientY >= rootRect.bottom) {\n        this.setCursorPosition({ node: this.getLastNode(), placement: 'after' });\n      } else if (event.clientY < rootRect.top) {\n        this.setCursorPosition({ node: this.getFirstNode(), placement: 'before'});\n      }\n    },\n\n    getLastNode() {\n      let lastNode  = null;\n      this.traverse((node) => {\n        lastNode = node;\n      });\n      return lastNode;\n    },\n\n    getFirstNode() {\n      return this.getNode([0]);\n    },\n\n    onNodeMousedownHandler(event, node) {\n      if (!this.isRoot) {\n        this.getRoot().onNodeMousedownHandler(event, node);\n        return;\n      }\n      this.mouseIsDown = true;\n    },\n\n\n    startScroll(speed) {\n      const $root = this.getRoot().$el;\n      if (this.scrollSpeed === speed) {\n        return;\n      } else if (this.scrollIntervalId) {\n        this.stopScroll();\n      }\n\n      this.scrollSpeed = speed;\n      this.scrollIntervalId = setInterval(() => {\n        $root.scrollTop += this.maxScrollSpeed * speed;\n      }, 20);\n    },\n\n    stopScroll() {\n      clearInterval(this.scrollIntervalId);\n      this.scrollIntervalId = 0;\n      this.scrollSpeed = 0;\n    },\n\n    onDocumentMouseupHandler(event) {\n      if (this.isDragging) this.onNodeMouseupHandler(event);\n    },\n\n    onNodeMouseupHandler(event, targetNode = null) {\n\n      if (!this.isRoot) {\n        this.getRoot().onNodeMouseupHandler(event, targetNode);\n        return;\n      }\n\n      this.mouseIsDown = false;\n\n      if (!this.isDragging && targetNode) {\n        this.select(targetNode, event);\n        return;\n      }\n\n      if (!this.cursorPosition) {\n        this.stopDrag();\n        return;\n      };\n\n\n      const draggingNodes = this.getSelected();\n\n      // check that nodes is possible to insert\n      for (let draggingNode of draggingNodes) {\n        if (draggingNode.pathStr == this.cursorPosition.node.pathStr) {\n          this.stopDrag();\n          return;\n        }\n\n        if (this.checkNodeIsParent(draggingNode, this.cursorPosition.node)) {\n          this.stopDrag();\n          return;\n        };\n      }\n\n      const newNodes = this.copy(this.value);\n      const nodeModelsToInsert = [];\n\n      // find and mark dragging model to delete\n      for (let draggingNode of draggingNodes) {\n        const sourceSiblings = this.getNodeSiblings(newNodes, draggingNode.path);\n        const draggingNodeModel = sourceSiblings[draggingNode.ind];\n        nodeModelsToInsert.push(this.copy(draggingNodeModel));\n        draggingNodeModel['_markToDelete'] = true;\n      }\n\n\n      // insert dragging nodes to the new place\n      const destNode = this.cursorPosition.node;\n      const destSiblings = this.getNodeSiblings(newNodes, destNode.path);\n      const destNodeModel = destSiblings[destNode.ind];\n\n      if (this.cursorPosition.placement === 'inside') {\n        destNodeModel.children = destNodeModel.children || [];\n        destNodeModel.children.unshift(...nodeModelsToInsert);\n      } else {\n        const insertInd = this.cursorPosition.placement === 'before' ?\n          destNode.ind :\n          destNode.ind + 1;\n\n        destSiblings.splice(insertInd, 0, ...nodeModelsToInsert);\n      }\n\n\n\n      // delete dragging node from the old place\n      this.traverse((node, nodeModel, siblings) => {\n        let i = siblings.length;\n        while (i--) {\n          if (siblings[i]['_markToDelete']) siblings.splice(i, 1);\n        }\n      }, newNodes);\n\n\n      this.lastSelectedNode = null;\n      this.emitInput(newNodes);\n      this.emitDrop(draggingNodes, this.cursorPosition, event);\n      this.stopDrag();\n    },\n\n\n    onToggleHandler(event, node) {\n      this.updateNode(node, { isExpanded: !node.isExpanded });\n      this.emitToggle(node, event);\n      event.stopPropagation();\n    },\n\n    stopDrag() {\n      this.isDragging = false;\n      this.mouseIsDown = false;\n      this.setCursorPosition(null);\n      this.stopScroll();\n    },\n\n\n    getParent() {\n      return this.$parent;\n    },\n\n    getRoot() {\n      if (this.isRoot) return this;\n      return this.getParent().getRoot();\n    },\n\n    getNodeSiblings(nodes, path) {\n      if (path.length === 1) return nodes;\n      return this.getNodeSiblings(nodes[path[0]].children, path.slice(1));\n    },\n\n\n    updateNode(nodeToUpdate, patch) {\n      if (!this.isRoot) {\n        this.getParent().updateNode(nodeToUpdate, patch);\n        return;\n      }\n\n      const newNodes = this.copy(this.value);\n      this.traverse((node, nodeModel) => {\n        if (node.pathStr !== nodeToUpdate.pathStr) return;\n        Object.assign(nodeModel, patch);\n      }, newNodes);\n\n      this.emitInput(newNodes);\n    },\n\n    getSelected() {\n      const selectedNodes = [];\n      this.traverse((node) => {\n        if (node.isSelected) selectedNodes.push(node);\n      });\n      return selectedNodes;\n    },\n\n\n    traverse(\n      cb,\n      nodeModels = null,\n      parentPath = []\n    ) {\n      if (!nodeModels) nodeModels = this.value;\n\n      let shouldStop = false;\n\n      const nodes = [];\n\n      nodeModels.forEach((nodeModel, nodeInd) => {\n        const itemPath = parentPath.concat(nodeInd);\n        const node = this.getNode(itemPath, nodeModel, nodeModels);\n        shouldStop = cb(node, nodeModel, nodeModels) === false;\n        nodes.push(node);\n\n        if (shouldStop) return false;\n\n        if (nodeModel.children) {\n          shouldStop = this.traverse(cb, nodeModel.children, itemPath) === false;\n        }\n      });\n\n      return !shouldStop ? nodes : false;\n    },\n\n    checkNodeIsParent(sourceNode, destNode) {\n      const destPath = destNode.path;\n      return JSON.stringify(destPath.slice(0, sourceNode.path.length)) == sourceNode.pathStr;\n    },\n\n    copy(entity) {\n      return JSON.parse(JSON.stringify(entity));\n    }\n\n  }\n};\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"sl-vue-tree\",\n      class: { \"sl-vue-tree-root\": _vm.isRoot },\n      on: {\n        mousemove: function(event) {\n          return _vm.onNodeMousemoveHandler(event)\n        },\n        mouseleave: function(event) {\n          return _vm.onMouseleaveHandler(event)\n        }\n      }\n    },\n    [\n      _c(\n        \"div\",\n        { ref: \"nodes\", staticClass: \"sl-vue-tree-nodes-list\" },\n        [\n          _vm._l(_vm.nodes, function(node, nodeInd) {\n            return _c(\n              \"div\",\n              {\n                staticClass: \"sl-vue-tree-node\",\n                class: { \"sl-vue-tree-selected\": node.isSelected }\n              },\n              [\n                _c(\"div\", {\n                  staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_before\",\n                  style: {\n                    visibility:\n                      _vm.cursorPosition &&\n                      _vm.cursorPosition.node.pathStr === node.pathStr &&\n                      _vm.cursorPosition.placement === \"before\"\n                        ? \"visible\"\n                        : \"hidden\"\n                  },\n                  on: {\n                    dragover: function(event) {\n                      return event.preventDefault()\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"sl-vue-tree-node-item\",\n                    class: {\n                      \"sl-vue-tree-cursor-inside\":\n                        _vm.cursorPosition &&\n                        _vm.cursorPosition.placement === \"inside\" &&\n                        _vm.cursorPosition.node.pathStr === node.pathStr,\n                      \"sl-vue-tree-node-is-leaf\": node.isLeaf,\n                      \"sl-vue-tree-node-is-folder\": !node.isLeaf\n                    },\n                    attrs: { path: node.pathStr },\n                    on: {\n                      drop: function(event) {\n                        return _vm.onNodeDropHandler(event, node)\n                      },\n                      mousedown: function(event) {\n                        return _vm.onNodeMousedownHandler(event, node)\n                      },\n                      mouseup: function(event) {\n                        return _vm.onNodeMouseupHandler(event, node)\n                      },\n                      contextmenu: function(event) {\n                        return _vm.emitNodeContextmenu(node, event)\n                      },\n                      dblclick: function(event) {\n                        return _vm.emitNodeDblclick(node, event)\n                      }\n                    }\n                  },\n                  [\n                    _vm._l(_vm.gaps, function(gapInd) {\n                      return _c(\"div\", { staticClass: \"sl-vue-tree-gap\" })\n                    }),\n                    _vm._v(\" \"),\n                    _vm.level && _vm.showBranches\n                      ? _c(\n                          \"div\",\n                          { staticClass: \"sl-vue-tree-branch\" },\n                          [\n                            _vm._t(\n                              \"branch\",\n                              [\n                                !node.isLastChild\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n            \" +\n                                          _vm._s(String.fromCharCode(0x251c)) +\n                                          _vm._s(String.fromCharCode(0x2500)) +\n                                          \" \\n          \"\n                                      )\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                node.isLastChild\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n            \" +\n                                          _vm._s(String.fromCharCode(0x2514)) +\n                                          _vm._s(String.fromCharCode(0x2500)) +\n                                          \" \\n          \"\n                                      )\n                                    ])\n                                  : _vm._e()\n                              ],\n                              { node: node }\n                            )\n                          ],\n                          2\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"sl-vue-tree-title\" },\n                      [\n                        !node.isLeaf\n                          ? _c(\n                              \"span\",\n                              {\n                                staticClass: \"sl-vue-tree-toggle\",\n                                on: {\n                                  click: function(event) {\n                                    return _vm.onToggleHandler(event, node)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._t(\n                                  \"toggle\",\n                                  [\n                                    _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n             \" +\n                                          _vm._s(\n                                            !node.isLeaf\n                                              ? node.isExpanded\n                                                ? \"-\"\n                                                : \"+\"\n                                              : \"\"\n                                          ) +\n                                          \"\\n            \"\n                                      )\n                                    ])\n                                  ],\n                                  { node: node }\n                                )\n                              ],\n                              2\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                          node: node\n                        })\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"sl-vue-tree-sidebar\" },\n                      [_vm._t(\"sidebar\", null, { node: node })],\n                      2\n                    )\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                _c(\"div\", {\n                  staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_after\",\n                  style: {\n                    visibility:\n                      _vm.cursorPosition &&\n                      _vm.cursorPosition.node.pathStr === node.pathStr &&\n                      _vm.cursorPosition.placement === \"after\"\n                        ? \"visible\"\n                        : \"hidden\"\n                  },\n                  on: {\n                    dragover: function(event) {\n                      return event.preventDefault()\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                node.children && node.children.length && node.isExpanded\n                  ? _c(\"sl-vue-tree\", {\n                      attrs: {\n                        value: node.children,\n                        level: _vm.level + 1,\n                        parentInd: nodeInd,\n                        allowMultiselect: _vm.allowMultiselect,\n                        edgeSize: _vm.edgeSize,\n                        showBranches: _vm.showBranches\n                      },\n                      on: {\n                        dragover: function(event) {\n                          return event.preventDefault()\n                        }\n                      },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"title\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                                node: node\n                              })\n                            ]\n                          }\n                        },\n                        {\n                          key: \"toggle\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              _vm._t(\n                                \"toggle\",\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\n                                      \"\\n             \" +\n                                        _vm._s(\n                                          !node.isLeaf\n                                            ? node.isExpanded\n                                              ? \"-\"\n                                              : \"+\"\n                                            : \"\"\n                                        ) +\n                                        \"\\n          \"\n                                    )\n                                  ])\n                                ],\n                                { node: node }\n                              )\n                            ]\n                          }\n                        },\n                        {\n                          key: \"sidebar\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [_vm._t(\"sidebar\", null, { node: node })]\n                          }\n                        }\n                      ])\n                    })\n                  : _vm._e()\n              ],\n              1\n            )\n          }),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.isDragging,\n                  expression: \"isDragging\"\n                }\n              ],\n              ref: \"dragInfo\",\n              staticClass: \"sl-vue-tree-drag-info\"\n            },\n            [\n              _vm._t(\"draginfo\", [\n                _vm._v(\n                  \"\\n        Items: \" + _vm._s(_vm.selectionSize) + \"\\n      \"\n                )\n              ])\n            ],\n            2\n          )\n        ],\n        2\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nexport { render, staticRenderFns }\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-0b7c263a\", { render: render, staticRenderFns: staticRenderFns })\n  }\n}","var disposed = false\n/* script */\nexport * from \"!!!./sl-vue-tree.js\"\nimport __vue_script__ from \"!!!./sl-vue-tree.js\"/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0b7c263a\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./sl-vue-tree.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src\\\\sl-vue-tree.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-0b7c263a\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-0b7c263a\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  scriptExports = scriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof scriptExports.default\n  if (type === 'object' || type === 'function') {\n    scriptExports = scriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"sourceRoot":""}