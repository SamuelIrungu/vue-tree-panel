{"version":3,"sources":["webpack://SlVueTree/webpack/universalModuleDefinition","webpack://SlVueTree/webpack/bootstrap","webpack://SlVueTree/./src/sl-vue-tree.js","webpack://SlVueTree/./src/sl-vue-tree.vue?2ddf","webpack://SlVueTree/./src/sl-vue-tree.vue","webpack://SlVueTree/./node_modules/vue-loader/lib/runtime/component-normalizer.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","sl_vue_tree","props","type","Array","default","edgeSize","Number","showBranches","Boolean","level","parentInd","allowMultiselect","allowToggleBranch","multiselectKey","String","validator","allowedKeys","multiselectKeys","isArray","filter","keyName","indexOf","length","scrollAreaHeight","maxScrollSpeed","data","rootCursorPosition","scrollIntervalId","scrollSpeed","lastSelectedNode","mouseIsDown","isDragging","lastMousePos","x","y","preventDrag","currentValue","this","mounted","isRoot","document","addEventListener","onDocumentMouseupHandler","beforeDestroy","removeEventListener","watch","newValue","computed","cursorPosition","getParent","nodes","nodeModels","copy","getNodes","children","gaps","push","selectionSize","getSelected","dragSize","getDraggable","methods","setCursorPosition","pos","_this","parentPath","arguments","undefined","isVisible","map","nodeModel","ind","nodePath","concat","getNode","path","siblings","slice","getNodeSiblings","isExpanded","isDraggable","isSelectable","title","isLeaf","isSelected","pathStr","JSON","stringify","isFirstChild","isLastChild","emitInput","getRoot","$emit","emitSelect","selectedNodes","event","emitBeforeDrop","draggingNodes","position","cancel","emitDrop","emitToggle","toggledNode","emitNodeClick","node","expand","updateNode","emitNodeDblclick","emitNodeContextmenu","onExternalDragoverHandler","preventDefault","getCursorPositionFromCoords","clientX","clientY","onExternalDropHandler","select","_this2","addToSelection","multiselectKeyIsPressed","find","key","selectedNode","newNodes","shiftSelectionMode","shiftKey","shiftSelectionStarted","traverse","onMousemoveHandler","initialDraggingState","isDragStarted","$root","$el","rootRect","getBoundingClientRect","$dragInfo","$refs","dragInfo","dragInfoTop","top","scrollTop","style","marginBottom","dragInfoLeft","left","destNode","placement","scrollBottomLine","bottom","scrollDownSpeed","scrollTopLine","scrollTopSpeed","startScroll","stopScroll","$target","elementFromPoint","$nodeItem","getAttribute","getClosetElementWithPath","parse","nodeHeight","offsetHeight","offsetY","height","getLastNode","getFirstNode","parentElement","onMouseleaveHandler","getNodeEl","querySelector","lastNode","getNextNode","_this3","resultNode","comparePaths","getPrevNode","_this4","prevNodes","path1","path2","onNodeMousedownHandler","button","speed","_this5","setInterval","clearInterval","onNodeMouseupHandler","targetNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","draggingNode","stopDrag","checkNodeIsParent","err","return","nodeModelsSubjectToInsert","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","draggingNodeModel","cancelled","nodeModelsToInsert","_i","insertModels","traverseModels","_markToDelete","splice","onToggleHandler","stopPropagation","$parent","patch","assign","cb","shouldStop","nodeInd","itemPath","remove","paths","pathsStr","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","destSiblings","destNodeModel","_destNodeModel$childr","unshift","apply","_toConsumableArray","insertInd","insert","sourceNode","destPath","entity","render","_vm","_h","$createElement","_c","_self","staticClass","class","sl-vue-tree-root","on","mousemove","mouseleave","dragend","$event","onDragendHandler","ref","_l","sl-vue-tree-selected","visibility","dragover","_v","sl-vue-tree-cursor-hover","sl-vue-tree-cursor-inside","sl-vue-tree-node-is-leaf","sl-vue-tree-node-is-folder","attrs","mousedown","mouseup","contextmenu","dblclick","click","drop","gapInd","_t","_e","_s","fromCharCode","scopedSlots","_u","fn","directives","rawName","expression","_withStripped","Component","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","normalizeComponent","__file","__webpack_exports__"],"mappings":"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","file":"sl-vue-tree.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SlVueTree\"] = factory();\n\telse\n\t\troot[\"SlVueTree\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport default {\n  name: 'sl-vue-tree',\n  props: {\n    value: {\n      type: Array,\n      default: () => []\n    },\n    edgeSize: {\n      type: Number,\n      default: 3\n    },\n    showBranches: {\n      type: Boolean,\n      default: false\n    },\n    level: {\n      type: Number,\n      default: 0\n    },\n    parentInd: {\n      type: Number\n    },\n    allowMultiselect: {\n      type: Boolean,\n      default: true\n    },\n    allowToggleBranch: {\n      type: Boolean,\n      default: true\n    },\n    multiselectKey: {\n      type: [String, Array],\n      default: function () {\n        return ['ctrlKey', 'metaKey']\n      },\n      validator: function (value) {\n        let allowedKeys = ['ctrlKey', 'metaKey', 'altKey'];\n        let multiselectKeys = Array.isArray(value) ? value : [value];\n        multiselectKeys = multiselectKeys.filter(keyName => allowedKeys.indexOf(keyName ) !== -1);\n        return !!multiselectKeys.length;\n      }\n    },\n    scrollAreaHeight: {\n      type: Number,\n      default: 70\n    },\n    maxScrollSpeed: {\n      type: Number,\n      default: 20\n    }\n  },\n\n  data() {\n    return {\n      rootCursorPosition: null,\n      scrollIntervalId: 0,\n      scrollSpeed: 0,\n      lastSelectedNode: null,\n      mouseIsDown: false,\n      isDragging: false,\n      lastMousePos: {x: 0, y: 0},\n      preventDrag: false,\n      currentValue: this.value\n    };\n  },\n\n  mounted() {\n    if (this.isRoot) {\n      document.addEventListener('mouseup', this.onDocumentMouseupHandler);\n    }\n  },\n\n  beforeDestroy() {\n    document.removeEventListener('mouseup', this.onDocumentMouseupHandler);\n  },\n\n  watch: {\n    value: function (newValue) {\n      this.currentValue = newValue;\n    }\n  },\n\n  computed: {\n    cursorPosition() {\n      if (this.isRoot) return this.rootCursorPosition;\n      return this.getParent().cursorPosition;\n    },\n\n    nodes() {\n      if (this.isRoot) {\n        const nodeModels = this.copy(this.currentValue);\n        return this.getNodes(nodeModels);\n      }\n\n      return this.getParent().nodes[this.parentInd].children;\n    },\n    /**\n   * gaps is using for nodes indentation\n   * @returns {number[]}\n   */\n    gaps() {\n      const gaps = [];\n      let i = this.level - 1;\n      if (!this.showBranches) i++;\n      while (i-- > 0) gaps.push(i);\n      return gaps;\n    },\n\n    isRoot() {\n      return !this.level\n    },\n\n    selectionSize() {\n      return this.getSelected().length;\n    },\n\n    dragSize() {\n      return this.getDraggable().length;\n    }\n  },\n  methods: {\n\n    setCursorPosition(pos) {\n      if (this.isRoot) {\n        this.rootCursorPosition = pos;\n        return;\n      }\n      this.getParent().setCursorPosition(pos);\n    },\n\n    getNodes(nodeModels, parentPath = [], isVisible = true) {\n\n      return nodeModels.map((nodeModel, ind) => {\n        const nodePath = parentPath.concat(ind);\n        return this.getNode(nodePath, nodeModel, nodeModels, isVisible);\n      })\n    },\n\n    getNode(\n      path,\n      nodeModel = null,\n      siblings = null,\n      isVisible = null\n    ) {\n      const ind = path.slice(-1)[0];\n\n      // calculate nodeModel, siblings, isVisible fields if it is not passed as arguments\n      siblings = siblings || this.getNodeSiblings(this.currentValue, path);\n      nodeModel = nodeModel || (siblings && siblings[ind]) || null;\n\n      if (isVisible == null) {\n        isVisible = this.isVisible(path);\n      }\n\n      if (!nodeModel) return null;\n\n      const isExpanded = nodeModel.isExpanded == void 0 ? true : !!nodeModel.isExpanded;\n      const isDraggable = nodeModel.isDraggable == void 0 ? true : !!nodeModel.isDraggable;\n      const isSelectable = nodeModel.isSelectable == void 0 ? true : !!nodeModel.isSelectable;\n\n      const node = {\n\n        // define the all ISlTreeNodeModel props\n        title: nodeModel.title,\n        isLeaf: !!nodeModel.isLeaf,\n        children: nodeModel.children ? this.getNodes(nodeModel.children, path, isExpanded) : [],\n        isSelected: !!nodeModel.isSelected,\n        isExpanded,\n        isVisible,\n        isDraggable,\n        isSelectable,\n        data: nodeModel.data !== void 0 ? nodeModel.data : {},\n\n        // define the all ISlTreeNode computed props\n        path: path,\n        pathStr: JSON.stringify(path),\n        level: path.length,\n        ind,\n        isFirstChild: ind == 0,\n        isLastChild: ind === siblings.length - 1\n      };\n      return node;\n    },\n\n    isVisible(path) {\n      if (path.length < 2) return true;\n      let nodeModels = this.currentValue;\n\n      for (let i = 0; i < path.length - 1; i++) {\n        let ind = path[i];\n        let nodeModel = nodeModels[ind];\n        let isExpanded = nodeModel.isExpanded == void 0 ? true : !!nodeModel.isExpanded;\n        if (!isExpanded) return false;\n        nodeModels = nodeModel.children;\n      }\n\n      return true;\n    },\n\n    emitInput(newValue) {\n      this.currentValue = newValue;\n      this.getRoot().$emit('input', newValue);\n    },\n\n    emitSelect(selectedNodes, event) {\n      this.getRoot().$emit('select', selectedNodes, event);\n    },\n\n    emitBeforeDrop(draggingNodes, position, cancel) {\n      this.getRoot().$emit('beforedrop', draggingNodes, position, cancel);\n    },\n\n    emitDrop(draggingNodes, position, event) {\n      this.getRoot().$emit('drop', draggingNodes, position, event);\n    },\n\n    emitToggle(toggledNode, event) {\n      this.getRoot().$emit('toggle', toggledNode, event);\n    },\n\n    emitNodeClick(node, event, expand = true) {\n      this.getRoot().$emit('nodeclick', node, event);\n      if (expand) {\n        this.updateNode(node.path, {isExpanded: !node.isExpanded});\n      }\n    },\n\n    emitNodeDblclick(node, event, expand) {\n      this.getRoot().$emit('nodedblclick', node, event);\n      if (expand) {\n        this.updateNode(node.path, {isExpanded: !node.isExpanded});\n      }\n    },\n\n    emitNodeContextmenu(node, event) {\n      this.getRoot().$emit('nodecontextmenu', node, event);\n    },\n\n    onExternalDragoverHandler(node, event) {\n      event.preventDefault();\n      const root = this.getRoot();\n      const cursorPosition = root.getCursorPositionFromCoords(event.clientX, event.clientY);\n      root.setCursorPosition(cursorPosition);\n      root.$emit('externaldragover', cursorPosition, event);\n    },\n\n    onExternalDropHandler(node, event) {\n      const root = this.getRoot();\n      const cursorPosition = root.getCursorPositionFromCoords(event.clientX, event.clientY);\n      root.$emit('externaldrop', cursorPosition, event);\n      this.setCursorPosition(null);\n    },\n\n    select(path, addToSelection = false, event = null) {\n      const multiselectKeys = Array.isArray(this.multiselectKey) ?\n        this.multiselectKey:\n        [this.multiselectKey];\n      const multiselectKeyIsPressed = event && !!multiselectKeys.find(key => event[key]);\n      addToSelection = (multiselectKeyIsPressed || addToSelection) && this.allowMultiselect ;\n\n      const selectedNode = this.getNode(path);\n      if (!selectedNode) return null;\n      const newNodes = this.copy(this.currentValue);\n      const shiftSelectionMode = this.allowMultiselect && event && event.shiftKey && this.lastSelectedNode;\n      const selectedNodes = [];\n      let shiftSelectionStarted = false;\n\n      this.traverse((node, nodeModel) => {\n\n\n        if (shiftSelectionMode) {\n          if (node.pathStr === selectedNode.pathStr || node.pathStr === this.lastSelectedNode.pathStr) {\n            nodeModel.isSelected = node.isSelectable;\n            shiftSelectionStarted = !shiftSelectionStarted;\n          }\n          if (shiftSelectionStarted) nodeModel.isSelected = node.isSelectable;\n        } else if (node.pathStr === selectedNode.pathStr) {\n          nodeModel.isSelected = node.isSelectable;\n        } else if (!addToSelection) {\n          if (nodeModel.isSelected) nodeModel.isSelected = false;\n        }\n\n        if (nodeModel.isSelected) selectedNodes.push(node);\n\n      }, newNodes);\n\n\n      this.lastSelectedNode = selectedNode;\n      this.emitInput(newNodes);\n      this.emitSelect(selectedNodes, event);\n      return selectedNode;\n    },\n\n    onMousemoveHandler(event) {\n      if (!this.isRoot) {\n        this.getRoot().onMousemoveHandler(event);\n        return;\n      }\n\n      if (this.preventDrag) return;\n\n      const initialDraggingState = this.isDragging;\n      const isDragging =\n        this.isDragging || (\n        this.mouseIsDown &&\n        (this.lastMousePos.x !== event.clientX || this.lastMousePos.y !== event.clientY)\n      );\n\n      const isDragStarted = initialDraggingState === false && isDragging === true;\n\n      this.lastMousePos = {\n        x: event.clientX,\n        y: event.clientY\n      };\n\n      if (!isDragging) return;\n\n      const $root = this.getRoot().$el;\n      const rootRect = $root.getBoundingClientRect();\n      const $dragInfo = this.$refs.dragInfo;\n      const dragInfoTop = (event.clientY - rootRect.top + $root.scrollTop - ($dragInfo.style.marginBottom | 0) );\n      const dragInfoLeft = (event.clientX - rootRect.left);\n\n      $dragInfo.style.top = dragInfoTop + 'px';\n      $dragInfo.style.left = dragInfoLeft + 'px';\n\n      const cursorPosition = this.getCursorPositionFromCoords(event.clientX, event.clientY);\n      const destNode = cursorPosition.node;\n      const placement = cursorPosition.placement;\n\n      if (isDragStarted && !destNode.isSelected) {\n        this.select(destNode.path, false, event);\n      }\n\n      const draggableNodes = this.getDraggable();\n      if (!draggableNodes.length) {\n        this.preventDrag = true;\n        return;\n      }\n\n      this.isDragging = isDragging;\n\n      this.setCursorPosition({ node: destNode, placement });\n\n      const scrollBottomLine = rootRect.bottom - this.scrollAreaHeight;\n      const scrollDownSpeed = (event.clientY - scrollBottomLine) / (rootRect.bottom - scrollBottomLine);\n      const scrollTopLine = rootRect.top + this.scrollAreaHeight;\n      const scrollTopSpeed = (scrollTopLine - event.clientY) / (scrollTopLine - rootRect.top);\n\n      if (scrollDownSpeed > 0) {\n        this.startScroll(scrollDownSpeed);\n      } else if (scrollTopSpeed > 0) {\n        this.startScroll(-scrollTopSpeed)\n      } else {\n        this.stopScroll();\n      }\n    },\n\n    getCursorPositionFromCoords(x, y) {\n      const $target = document.elementFromPoint(x, y);\n      const $nodeItem = $target.getAttribute('path') ? $target : this.getClosetElementWithPath($target);\n      let destNode;\n      let placement;\n\n      if ($nodeItem) {\n\n        if (!$nodeItem) return;\n\n        destNode = this.getNode(JSON.parse($nodeItem.getAttribute('path')));\n\n        const nodeHeight = $nodeItem.offsetHeight;\n        const edgeSize = this.edgeSize;\n        const offsetY = y - $nodeItem.getBoundingClientRect().top;\n\n\n        if (destNode.isLeaf) {\n          placement = offsetY >= nodeHeight / 2 ? 'after' : 'before';\n        } else {\n          if (offsetY <= edgeSize) {\n            placement = 'before';\n          } else if (offsetY >= nodeHeight - edgeSize) {\n            placement = 'after';\n          } else {\n            placement = 'inside';\n          }\n        }\n      } else {\n        const $root = this.getRoot().$el;\n        const rootRect = $root.getBoundingClientRect();\n        if (y > rootRect.top + (rootRect.height / 2)) {\n          placement = 'after';\n          destNode = this.getLastNode();\n        } else {\n          placement = 'before';\n          destNode = this.getFirstNode();\n        }\n      }\n\n      return { node: destNode, placement };\n    },\n\n    getClosetElementWithPath($el) {\n      if (!$el) return null;\n      if ($el.getAttribute('path')) return $el;\n      return this.getClosetElementWithPath($el.parentElement);\n    },\n\n    onMouseleaveHandler(event) {\n      if (!this.isRoot || !this.isDragging) return;\n      const $root = this.getRoot().$el;\n      const rootRect = $root.getBoundingClientRect();\n      if (event.clientY >= rootRect.bottom) {\n        this.setCursorPosition({ node: this.nodes.slice(-1)[0], placement: 'after' });\n      } else if (event.clientY < rootRect.top) {\n        this.setCursorPosition({ node: this.getFirstNode(), placement: 'before'});\n      }\n    },\n\n    getNodeEl(path) {\n      this.getRoot().$el.querySelector(`[path=\"${JSON.stringify(path)}\"]`);\n    },\n\n    getLastNode() {\n      let lastNode  = null;\n      this.traverse((node) => {\n        lastNode = node;\n      });\n      return lastNode;\n    },\n\n    getFirstNode() {\n      return this.getNode([0]);\n    },\n\n    getNextNode(path, filter = null) {\n\n      let resultNode = null;\n\n      this.traverse((node) => {\n        if (this.comparePaths(node.path, path) < 1) return;\n\n        if (!filter || filter(node)) {\n          resultNode = node;\n          return false; // stop traverse\n        }\n\n      });\n\n      return resultNode;\n    },\n\n    getPrevNode(path, filter) {\n      let prevNodes = [];\n\n      this.traverse((node) => {\n        if (this.comparePaths(node.path, path) >= 0) {\n          return false;\n        }\n        prevNodes.push(node);\n      });\n\n      let i = prevNodes.length;\n      while (i--) {\n        const node = prevNodes[i];\n        if (!filter || filter(node)) return node;\n      }\n\n      return null;\n    },\n\n    /**\n     * returns 1 if path1 > path2\n     * returns -1 if path1 < path2\n     * returns 0 if path1 == path2\n     *\n     * examples\n     *\n     * [1, 2, 3] < [1, 2, 4]\n     * [1, 1, 3] < [1, 2, 3]\n     * [1, 2, 3] > [1, 2, 0]\n     * [1, 2, 3] > [1, 1, 3]\n     * [1, 2] < [1, 2, 0]\n     *\n     */\n    comparePaths(path1, path2) {\n      for (let i = 0; i < path1.length; i++) {\n        if (path2[i] == void 0) return 1;\n        if (path1[i] > path2[i]) return 1;\n        if (path1[i] < path2[i]) return -1;\n      }\n      return path2[path1.length] == void 0 ? 0 : -1;\n    },\n\n    onNodeMousedownHandler(event, node) {\n      // handle only left mouse button\n      if (event.button !== 0) return;\n\n      if (!this.isRoot) {\n        this.getRoot().onNodeMousedownHandler(event, node);\n        return;\n      }\n      this.mouseIsDown = true;\n    },\n\n\n    startScroll(speed) {\n      const $root = this.getRoot().$el;\n      if (this.scrollSpeed === speed) {\n        return;\n      } else if (this.scrollIntervalId) {\n        this.stopScroll();\n      }\n\n      this.scrollSpeed = speed;\n      this.scrollIntervalId = setInterval(() => {\n        $root.scrollTop += this.maxScrollSpeed * speed;\n      }, 20);\n    },\n\n    stopScroll() {\n      clearInterval(this.scrollIntervalId);\n      this.scrollIntervalId = 0;\n      this.scrollSpeed = 0;\n    },\n\n    onDocumentMouseupHandler(event) {\n      if (this.isDragging) this.onNodeMouseupHandler(event);\n    },\n\n    onNodeMouseupHandler(event, targetNode = null) {\n\n      // handle only left mouse button\n      if (event.button !== 0) return;\n\n      if (!this.isRoot) {\n        this.getRoot().onNodeMouseupHandler(event, targetNode);\n        return;\n      }\n\n      this.mouseIsDown = false;\n\n      if (!this.isDragging && targetNode && !this.preventDrag) {\n        this.select(targetNode.path, false, event);\n      }\n\n      this.preventDrag = false;\n\n      if (!this.cursorPosition) {\n        this.stopDrag();\n        return;\n      };\n\n\n      const draggingNodes = this.getDraggable();\n\n      // check that nodes is possible to insert\n      for (let draggingNode of draggingNodes) {\n        if (draggingNode.pathStr == this.cursorPosition.node.pathStr) {\n          this.stopDrag();\n          return;\n        }\n\n        if (this.checkNodeIsParent(draggingNode, this.cursorPosition.node)) {\n          this.stopDrag();\n          return;\n        }\n      }\n\n      const newNodes = this.copy(this.currentValue);\n      const nodeModelsSubjectToInsert = [];\n\n      // find dragging model to delete\n      for (let draggingNode of draggingNodes) {\n        const sourceSiblings = this.getNodeSiblings(newNodes, draggingNode.path);\n        const draggingNodeModel = sourceSiblings[draggingNode.ind];\n        nodeModelsSubjectToInsert.push(draggingNodeModel);\n      }\n\n      // allow the drop to be cancelled\n      let cancelled = false;\n      this.emitBeforeDrop(draggingNodes, this.cursorPosition, () => cancelled = true);\n\n      if (cancelled) {\n          this.stopDrag();\n          return;\n      }\n\n      const nodeModelsToInsert = [];\n\n      // mark dragging model to delete\n      for (let draggingNodeModel of nodeModelsSubjectToInsert) {\n          nodeModelsToInsert.push(this.copy(draggingNodeModel));\n          draggingNodeModel['_markToDelete'] = true;\n      }\n\n      // insert dragging nodes to the new place\n      this.insertModels(this.cursorPosition, nodeModelsToInsert, newNodes);\n\n\n      // delete dragging node from the old place\n      this.traverseModels((nodeModel, siblings, ind) => {\n        if (!nodeModel._markToDelete) return;\n        siblings.splice(ind, 1);\n      }, newNodes);\n\n\n      this.lastSelectedNode = null;\n      this.emitInput(newNodes);\n      this.emitDrop(draggingNodes, this.cursorPosition, event);\n      this.stopDrag();\n    },\n\n\n    onToggleHandler(event, node) {\n      if (!this.allowToggleBranch) return;\n\n      this.updateNode(node.path, { isExpanded: !node.isExpanded });\n      this.emitToggle(node, event);\n      event.stopPropagation();\n    },\n\n    stopDrag() {\n      this.isDragging = false;\n      this.mouseIsDown = false;\n      this.setCursorPosition(null);\n      this.stopScroll();\n    },\n\n\n    getParent() {\n      return this.$parent;\n    },\n\n    getRoot() {\n      if (this.isRoot) return this;\n      return this.getParent().getRoot();\n    },\n\n    getNodeSiblings(nodes, path) {\n      if (path.length === 1) return nodes;\n      return this.getNodeSiblings(nodes[path[0]].children, path.slice(1));\n    },\n\n\n    updateNode(path, patch) {\n      if (!this.isRoot) {\n        this.getParent().updateNode(path, patch);\n        return;\n      }\n\n      const pathStr = JSON.stringify(path);\n      const newNodes = this.copy(this.currentValue);\n      this.traverse((node, nodeModel) => {\n        if (node.pathStr !== pathStr) return;\n        Object.assign(nodeModel, patch);\n      }, newNodes);\n\n      this.emitInput(newNodes);\n    },\n\n    getSelected() {\n      const selectedNodes = [];\n      this.traverse((node) => {\n        if (node.isSelected) selectedNodes.push(node);\n      });\n      return selectedNodes;\n    },\n\n    getDraggable() {\n      const selectedNodes = [];\n      this.traverse((node) => {\n        if (node.isSelected && node.isDraggable) selectedNodes.push(node);\n      });\n      return selectedNodes;\n    },\n\n\n    traverse(\n      cb,\n      nodeModels = null,\n      parentPath = []\n    ) {\n      if (!nodeModels) nodeModels = this.currentValue;\n\n      let shouldStop = false;\n\n      const nodes = [];\n\n      for (let nodeInd = 0; nodeInd < nodeModels.length; nodeInd++) {\n        const nodeModel = nodeModels[nodeInd];\n        const itemPath = parentPath.concat(nodeInd);\n        const node = this.getNode(itemPath, nodeModel, nodeModels);\n        shouldStop = cb(node, nodeModel, nodeModels) === false;\n        nodes.push(node);\n\n        if (shouldStop) break;\n\n        if (nodeModel.children) {\n          shouldStop = this.traverse(cb, nodeModel.children, itemPath) === false;\n          if (shouldStop) break;\n        }\n      }\n\n      return !shouldStop ? nodes : false;\n    },\n\n    traverseModels(cb, nodeModels) {\n      let i = nodeModels.length;\n      while (i--) {\n        const nodeModel = nodeModels[i];\n        if (nodeModel.children) this.traverseModels(cb, nodeModel.children);\n        cb(nodeModel, nodeModels, i);\n      }\n      return nodeModels;\n    },\n\n    remove(paths) {\n      const pathsStr = paths.map(path => JSON.stringify(path));\n      const newNodes = this.copy(this.currentValue);\n      this.traverse( (node, nodeModel, siblings) => {\n        for (const pathStr of pathsStr) {\n          if (node.pathStr === pathStr) nodeModel._markToDelete = true;\n        }\n      }, newNodes);\n\n      this.traverseModels((nodeModel, siblings, ind) => {\n        if (!nodeModel._markToDelete) return;\n        siblings.splice(ind, 1);\n      }, newNodes);\n\n      this.emitInput(newNodes);\n    },\n\n    insertModels(cursorPosition, nodeModels, newNodes) {\n      const destNode = cursorPosition.node;\n      const destSiblings = this.getNodeSiblings(newNodes, destNode.path);\n      const destNodeModel = destSiblings[destNode.ind];\n\n      if (cursorPosition.placement === 'inside') {\n        destNodeModel.children = destNodeModel.children || [];\n        destNodeModel.children.unshift(...nodeModels);\n      } else {\n        const insertInd = cursorPosition.placement === 'before' ?\n          destNode.ind :\n          destNode.ind + 1;\n\n        destSiblings.splice(insertInd, 0, ...nodeModels);\n      }\n    },\n\n    insert(cursorPosition, nodeModel) {\n      const nodeModels = Array.isArray(nodeModel) ? nodeModel : [nodeModel];\n      const newNodes = this.copy(this.currentValue);\n\n      this.insertModels(cursorPosition, nodeModels, newNodes);\n\n      this.emitInput(newNodes);\n    },\n\n    checkNodeIsParent(sourceNode, destNode) {\n      const destPath = destNode.path;\n      return JSON.stringify(destPath.slice(0, sourceNode.path.length)) == sourceNode.pathStr;\n    },\n\n    copy(entity) {\n      return JSON.parse(JSON.stringify(entity));\n    }\n\n  }\n};\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"sl-vue-tree\",\n      class: { \"sl-vue-tree-root\": _vm.isRoot },\n      on: {\n        mousemove: _vm.onMousemoveHandler,\n        mouseleave: _vm.onMouseleaveHandler,\n        dragend: function($event) {\n          _vm.onDragendHandler(null, $event)\n        }\n      }\n    },\n    [\n      _c(\n        \"div\",\n        { ref: \"nodes\", staticClass: \"sl-vue-tree-nodes-list\" },\n        [\n          _vm._l(_vm.nodes, function(node, nodeInd) {\n            return _c(\n              \"div\",\n              {\n                staticClass: \"sl-vue-tree-node\",\n                class: { \"sl-vue-tree-selected\": node.isSelected }\n              },\n              [\n                _c(\"div\", {\n                  staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_before\",\n                  style: {\n                    visibility:\n                      _vm.cursorPosition &&\n                      _vm.cursorPosition.node.pathStr === node.pathStr &&\n                      _vm.cursorPosition.placement === \"before\"\n                        ? \"visible\"\n                        : \"hidden\"\n                  },\n                  on: {\n                    dragover: function($event) {\n                      $event.preventDefault()\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"sl-vue-tree-node-item\",\n                    class: {\n                      \"sl-vue-tree-cursor-hover\":\n                        _vm.cursorPosition &&\n                        _vm.cursorPosition.node.pathStr === node.pathStr,\n\n                      \"sl-vue-tree-cursor-inside\":\n                        _vm.cursorPosition &&\n                        _vm.cursorPosition.placement === \"inside\" &&\n                        _vm.cursorPosition.node.pathStr === node.pathStr,\n                      \"sl-vue-tree-node-is-leaf\": node.isLeaf,\n                      \"sl-vue-tree-node-is-folder\": !node.isLeaf\n                    },\n                    attrs: { path: node.pathStr },\n                    on: {\n                      mousedown: function($event) {\n                        _vm.onNodeMousedownHandler($event, node)\n                      },\n                      mouseup: function($event) {\n                        _vm.onNodeMouseupHandler($event, node)\n                      },\n                      contextmenu: function($event) {\n                        _vm.emitNodeContextmenu(node, $event)\n                      },\n                      dblclick: function($event) {\n                        _vm.emitNodeDblclick(node, $event, true)\n                      },\n                      click: function($event) {\n                        _vm.emitNodeClick(node, $event, true)\n                      },\n                      dragover: function($event) {\n                        _vm.onExternalDragoverHandler(node, $event)\n                      },\n                      drop: function($event) {\n                        _vm.onExternalDropHandler(node, $event)\n                      }\n                    }\n                  },\n                  [\n                    _vm._l(_vm.gaps, function(gapInd) {\n                      return _c(\"div\", { staticClass: \"sl-vue-tree-gap\" })\n                    }),\n                    _vm._v(\" \"),\n                    _vm.level && _vm.showBranches\n                      ? _c(\n                          \"div\",\n                          { staticClass: \"sl-vue-tree-branch\" },\n                          [\n                            _vm._t(\n                              \"branch\",\n                              [\n                                !node.isLastChild\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n            \" +\n                                          _vm._s(String.fromCharCode(0x251c)) +\n                                          _vm._s(String.fromCharCode(0x2500)) +\n                                          \" \\n          \"\n                                      )\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                node.isLastChild\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n            \" +\n                                          _vm._s(String.fromCharCode(0x2514)) +\n                                          _vm._s(String.fromCharCode(0x2500)) +\n                                          \" \\n          \"\n                                      )\n                                    ])\n                                  : _vm._e()\n                              ],\n                              { node: node }\n                            )\n                          ],\n                          2\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"sl-vue-tree-title\" },\n                      [\n                        !node.isLeaf\n                          ? _c(\n                              \"span\",\n                              {\n                                staticClass: \"sl-vue-tree-toggle\",\n                                on: {\n                                  click: function($event) {\n                                    _vm.onToggleHandler($event, node)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._t(\n                                  \"toggle\",\n                                  [\n                                    _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n             \" +\n                                          _vm._s(\n                                            !node.isLeaf\n                                              ? node.isExpanded\n                                                ? \"-\"\n                                                : \"+\"\n                                              : \"\"\n                                          ) +\n                                          \"\\n            \"\n                                      )\n                                    ])\n                                  ],\n                                  { node: node }\n                                )\n                              ],\n                              2\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                          node: node\n                        }),\n                        _vm._v(\" \"),\n                        !node.isLeaf &&\n                        node.children.length == 0 &&\n                        node.isExpanded\n                          ? _vm._t(\"empty-node\", null, { node: node })\n                          : _vm._e()\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"sl-vue-tree-sidebar\" },\n                      [_vm._t(\"sidebar\", null, { node: node })],\n                      2\n                    )\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                node.children && node.children.length && node.isExpanded\n                  ? _c(\"sl-vue-tree\", {\n                      attrs: {\n                        value: node.children,\n                        level: node.level,\n                        parentInd: nodeInd,\n                        allowMultiselect: _vm.allowMultiselect,\n                        allowToggleBranch: _vm.allowToggleBranch,\n                        edgeSize: _vm.edgeSize,\n                        showBranches: _vm.showBranches\n                      },\n                      on: {\n                        dragover: function($event) {\n                          $event.preventDefault()\n                        }\n                      },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"title\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                                node: node\n                              })\n                            ]\n                          }\n                        },\n                        {\n                          key: \"toggle\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              _vm._t(\n                                \"toggle\",\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\n                                      \"\\n             \" +\n                                        _vm._s(\n                                          !node.isLeaf\n                                            ? node.isExpanded\n                                              ? \"-\"\n                                              : \"+\"\n                                            : \"\"\n                                        ) +\n                                        \"\\n          \"\n                                    )\n                                  ])\n                                ],\n                                { node: node }\n                              )\n                            ]\n                          }\n                        },\n                        {\n                          key: \"sidebar\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [_vm._t(\"sidebar\", null, { node: node })]\n                          }\n                        },\n                        {\n                          key: \"empty-node\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              !node.isLeaf &&\n                              node.children.length == 0 &&\n                              node.isExpanded\n                                ? _vm._t(\"empty-node\", null, { node: node })\n                                : _vm._e()\n                            ]\n                          }\n                        }\n                      ])\n                    })\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"div\", {\n                  staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_after\",\n                  style: {\n                    visibility:\n                      _vm.cursorPosition &&\n                      _vm.cursorPosition.node.pathStr === node.pathStr &&\n                      _vm.cursorPosition.placement === \"after\"\n                        ? \"visible\"\n                        : \"hidden\"\n                  },\n                  on: {\n                    dragover: function($event) {\n                      $event.preventDefault()\n                    }\n                  }\n                })\n              ],\n              1\n            )\n          }),\n          _vm._v(\" \"),\n          _vm.isRoot\n            ? _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.isDragging,\n                      expression: \"isDragging\"\n                    }\n                  ],\n                  ref: \"dragInfo\",\n                  staticClass: \"sl-vue-tree-drag-info\"\n                },\n                [\n                  _vm._t(\"draginfo\", [\n                    _vm._v(\n                      \"\\n        Items: \" +\n                        _vm._s(_vm.selectionSize) +\n                        \"\\n      \"\n                    )\n                  ])\n                ],\n                2\n              )\n            : _vm._e()\n        ],\n        2\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nexport { render, staticRenderFns }\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-539decb0\", { render: render, staticRenderFns: staticRenderFns })\n  }\n}","var disposed = false\n/* script */\nexport * from \"!!babel-loader!./sl-vue-tree.js\"\nimport __vue_script__ from \"!!babel-loader!./sl-vue-tree.js\"/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-539decb0\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./sl-vue-tree.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src/sl-vue-tree.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-539decb0\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-539decb0\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  scriptExports = scriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof scriptExports.default\n  if (type === 'object' || type === 'function') {\n    scriptExports = scriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"sourceRoot":""}